name: Quality Gate

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

env:
  DEEP_CLEAN: 'true'

jobs:
  gate:
    runs-on: self-hosted
    timeout-minutes: 45

    steps:
      - name: Stop compose
        run: ./buddy.sh stop

      - name: Take ownership of previous workspace
        run: |
          sudo mkdir -p "$GITHUB_WORKSPACE"
          sudo chown -R "$USER:$USER" "$GITHUB_WORKSPACE"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.3'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Run linter and unit tests in backend
        working-directory: ./backend
        run: |
          uv sync
          uv run ruff check .
          uv run pytest --junitxml=pytest-results.xml

      - uses: EnricoMi/publish-unit-test-result-action/linux@v2
        if: always()
        with:
          check_name: "Backend Unit Tests"
          files: backend/pytest-results.xml

      - name: Run linter and unit tests in frontend
        working-directory: ./frontend
        run: |
          uv sync
          uv run ruff check .
          uv run pytest --junitxml=pytest-results.xml

      - uses: EnricoMi/publish-unit-test-result-action/linux@v2
        if: always()
        with:
          check_name: "Frontend Unit Tests"
          files: frontend/pytest-results.xml

      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./backend/Dockerfile
          ignore: DL3018

      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./frontend/Dockerfile
          ignore: DL3018
      
      - name: Docker disk usage (before)
        run: docker system df || true

      - name: Docker prune
        if: ${{ env.DEEP_CLEAN == 'true' }}
        run: docker system prune -af --volumes

      - name: Start Buddy
        run: ./buddy.sh start

      - name: Run API and E2E Tests
        run: ./buddy.sh test

      - name: Publish Playwright Test Results
        uses: EnricoMi/publish-unit-test-result-action/linux@v2
        if: always()
        with:
          check_name: "Playwright UI Tests"
          files: ./tests/e2e/test-results/results.xml

      - name: Archive Playwright Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: report.zip
          path: ./tests/e2e/test-results
          retention-days: 7

      - name: Docker prune (post)
        if: ${{ always() && env.DEEP_CLEAN == 'true' }}
        run: |
          ./buddy.sh stop
          docker system prune -af --volumes

      - name: Docker disk usage (after)
        if: ${{ always() }}
        run: docker system df || true
